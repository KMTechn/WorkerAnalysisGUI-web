[성과 분석 대시보드 (WorkerAnalysisGUI-web)] 사용자 설명서

문서 버전: 3.0.0-web
최종 수정일: 2025년 8월 8일

이 문서는 웹 기반 성과 분석 대시보드의 설치, 사용법, 그리고 문제 해결 방법을 안내합니다. 사용 중 궁금한 점이 생기면 이 문서를 가장 먼저 확인해 주세요.

1. 시작하기 전에

1.1. 프로그램 소개

■ 어떤 프로그램인가요?
이 프로그램은 웹 브라우저를 통해 작업자 데이터를 효율적으로 분석하고 시각화하는 대시보드입니다. 로컬에 저장된 CSV 형식의 작업 로그 파일을 자동으로 읽어와 심층 분석을 수행하고, 사용자는 웹 인터페이스를 통해 직관적인 차트와 표로 결과를 확인할 수 있습니다.

■ 주요 기능은 무엇인가요?
- **공정별/작업자별 필터링**: 분석하고 싶은 공정, 기간, 작업자를 선택하여 데이터를 필터링합니다.
- **다양한 분석 탭**: 실시간 현황, 생산량 분석, 작업자별 상세 분석, 오류 로그, 이력 추적 등 다양한 관점의 분석 탭을 제공합니다.
- **대화형 대시보드**: 모든 데이터는 차트와 표로 시각화되어 쉽게 인사이트를 얻을 수 있습니다.
- **실시간 업데이트**: 로그 폴더에 새로운 데이터가 들어오면 자동으로 감지하여 대시보드에 반영합니다.
- **데이터 내보내기**: 분석된 데이터를 Excel 파일로 내보낼 수 있습니다.

■ 누구를 위한 프로그램인가요?
데이터 분석가, 생산 관리자, 공정 관리자 등 작업 효율 및 성과 데이터를 기반으로 의사결정이 필요한 모든 분을 위해 만들어졌습니다.

1.2. 시스템 요구사항

이 프로그램을 원활하게 사용하기 위해 필요한 최소 사양입니다.

| 구분 | 최소 사양 |
|---|---|
| 운영체제 | Windows 10 이상 |
| 필수 프로그램 | Python 3.9 이상, Git |
| 웹 브라우저 | Chrome, Microsoft Edge 등 최신 버전 |
| 참고 | CPU, RAM 등은 데이터의 양에 따라 유동적입니다. |

2. 설치 및 실행

이 프로그램은 별도의 설치 파일(.exe) 없이, 사용자의 PC에서 직접 서버를 구동하고 웹 브라우저로 접속하는 방식입니다.

2.1. 최초 1회 준비 과정

1.  **프로그램 코드 다운로드 (Git Clone)**
    Git Bash 또는 터미널을 열고 아래 명령어를 실행하여 프로그램을 다운로드합니다.
    ```bash
    git clone https://github.com/your-username/WorkerAnalysisGUI-web.git
    cd WorkerAnalysisGUI-web
    ```

2.  **파이썬 가상 환경 생성 및 활성화**
    독립된 실행 환경을 만들기 위해 아래 명령어를 순서대로 실행합니다.
    ```bash
    # 가상 환경 생성
    python -m venv venv
    # 가상 환경 활성화 (Windows)
    .\venv\Scripts\activate
    ```

3.  **필수 라이브러리 설치**
    프로그램 구동에 필요한 라이브러리들을 아래 명령어로 한 번에 설치합니다.
    ```bash
    pip install -r requirements.txt
    ```

2.2. 프로그램 실행

1.  **웹 서버 시작**
    터미널에서 아래 명령어를 입력하여 웹 서버를 시작합니다.
    ```bash
    python app.py
    ```
    서버가 정상적으로 실행되면 "Flask 서버를 시작합니다..." 라는 메시지가 나타납니다.

2.  **웹 브라우저 접속**
    웹 브라우저를 열고 주소창에 아래 주소를 입력하여 대시보드에 접속합니다.
    **http://127.0.0.1:8089**

3.  **프로그램 종료**
    프로그램 사용을 마치려면 서버가 실행 중인 터미널 창에서 `Ctrl + C`를 눌러 종료합니다.

2.3. 초기 설정

-   **로그 파일 위치**: 이 프로그램은 `C:\Sync` 폴더에 있는 `*작업이벤트로그*.csv` 파일을 자동으로 읽도록 설정되어 있습니다. 분석할 로그 파일들이 반드시 해당 경로에 위치해야 합니다.

3. 빠른 시작 가이드 (Quick Start)

1.  **서버 실행**: `python app.py` 명령어로 웹 서버를 실행합니다.
2.  **대시보드 접속**: 웹 브라우저에서 `http://127.0.0.1:8089`로 접속합니다.
3.  **필터 설정**: 좌측 사이드바에서 분석할 공정, 기간, 작업자를 선택합니다.
4.  **분석 실행**: `[분석 실행]` 버튼을 클릭하면 우측에 선택된 조건의 분석 결과가 나타납니다.

4. 화면 및 기능 상세 설명

4.1. 메인 화면 구성

-   **사이드바 (좌측)**: 공정 선택, 분석 기간, 작업자 등 데이터를 필터링하는 컨트롤 메뉴가 위치합니다.
-   **메인 콘텐츠 (우측)**: 분석 결과가 탭 형태로 표시되는 주 작업 영역입니다. 탭을 클릭하여 다양한 분석 결과를 확인할 수 있습니다.

4.2. 주요 기능 사용법

-   **실시간 현황**: 오늘 발생한 데이터를 기준으로 작업자별, 품목별 생산 현황을 요약하여 보여줍니다.
-   **생산량/검사량 분석**: 선택한 기간 동안의 생산량 추이를 차트로 보여줍니다.
-   **작업자별 분석**: 작업자를 선택하여 개인의 성과 지표(종합 점수, 작업 시간, 수율 등)를 상세히 분석합니다.
-   **오류 로그**: 설정된 기간 내에 발생한 모든 오류 기록을 시간 순으로 보여줍니다.
-   **생산 이력 추적**: 작업지시 ID, 제품 바코드 등으로 특정 작업의 전체 공정 이력을 추적합니다.
-   **상세 데이터**: 필터링된 모든 작업 세션의 원본 데이터를 표 형태로 보여주며, Excel 파일로 내보낼 수 있습니다.

5. 문제 해결 (Troubleshooting) / FAQ

Q1. `python app.py` 실행 시 오류가 발생하며 프로그램이 실행되지 않아요.
A.   `pip install -r requirements.txt` 명령어로 모든 라이브러리가 정상적으로 설치되었는지 확인해주세요. 특히 가상환경(`venv`)이 활성화된 상태에서 설치했는지 확인하는 것이 중요합니다.

Q2. 웹 브라우저에서 접속했는데 페이지가 뜨지 않아요.
A.   서버가 실행된 터미널에 오류 메시지가 없는지 확인하고, 주소창에 `http://127.0.0.1:8089`를 정확히 입력했는지 다시 확인해주세요.

Q3. 분석 실행 버튼을 눌러도 데이터가 나오지 않아요.
A.   로그 파일이 `C:\Sync` 폴더에 올바르게 위치해 있는지 확인해주세요. 또한, 사이드바에서 선택한 기간과 작업자에 해당하는 로그 파일이 실제로 존재하는지 확인해야 합니다.

6. 문의 및 지원

이 문서로 해결되지 않는 문제가 있거나 추가적인 정보가 필요하시면 아래 연락처로 문의해 주세요.

-   **GitHub 저장소**: [https://github.com/your-username/WorkerAnalysisGUI-web](https://github.com/your-username/WorkerAnalysisGUI-web)
-   **담당자**: [담당자 이름]
